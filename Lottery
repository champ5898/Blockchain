pragma solidity ^0.5.0;

contract lottery{
    
    address payable [] public addresses;
    address public owner;
    
    
    constructor () public{
        owner= msg.sender;
    }
    
    modifier minAmnt(){
        
        require (msg.value>=1 ether, "Min deposit 1 ether");
        _;
    }
    modifier ownerOnly(){
        if(msg.sender==owner)
        _;
    
        
    }
    
    function deposit() public payable minAmnt(){
        
        addresses.push(msg.sender);
    }
    
    function winner() public view ownerOnly returns(address payable lucky){
      uint   i=uint(keccak256(abi.encodePacked(now, block.difficulty, addresses.length)))%addresses.length;
      lucky=addresses[i];
      return lucky;
     
      
    }
    
    function transfer() public ownerOnly(){
    address payable won= winner();
        selfdestruct(won);
        
        
    }
    
}
